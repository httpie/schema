/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Auth".
 */
export type Auth = BaseAuth & {
  type: AuthTypeWithoutInherited;
  [k: string]: unknown;
};
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "AuthTypeWithoutInherited".
 */
export type AuthTypeWithoutInherited = "none" | "basic" | "bearer" | "apiKey";
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Color".
 */
export type Color = "gray" | "green" | "pink" | "blue" | "red" | "orange" | "purple" | "aqua" | "yellow";
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "IconName".
 */
export type IconName =
  | "default"
  | "circle"
  | "triangle"
  | "square"
  | "rhombus"
  | "hexagon"
  | "heart"
  | "star"
  | "thumbUp"
  | "rocket"
  | "cloud"
  | "bulb"
  | "diamond"
  | "lock"
  | "wrench"
  | "hammer"
  | "flame"
  | "monitor"
  | "mobile"
  | "globe"
  | "database"
  | "creditCard"
  | "paperPencil"
  | "bubble";
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "AuthWithInherited".
 */
export type AuthWithInherited = BaseAuth & {
  type: AuthType;
  [k: string]: unknown;
};
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "AuthType".
 */
export type AuthType = "none" | "basic" | "bearer" | "apiKey" | "inherited";
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "List".
 */
export type List = ListItem[];

/**
 * Export of all data from the HTTPie client
 */
export interface HTTPieExportFormat {
  meta?: HTTPieMeta;
  entry?: Collection | Request | Workspace | Environment;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "HTTPieMeta".
 */
export interface HTTPieMeta {
  format: "httpie";
  version: string;
  contentType: "workspace" | "collection" | "request" | "environment";
  schema?: string;
  source?: string;
  docs?: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Collection".
 */
export interface Collection {
  auth: Auth;
  icon?: IconConfig;
  id?: string;
  name: string;
  requests: Request[];
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "BaseAuth".
 */
export interface BaseAuth {
  credentials?: {
    password: string;
    username: string;
  };
  target?: AuthTarget;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "IconConfig".
 */
export interface IconConfig {
  color: Color;
  name: IconName;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Request".
 */
export interface Request {
  auth: AuthWithInherited;
  body: RequestBody;
  headers: List;
  id?: string;
  method: string;
  name?: string;
  queryParams: List;
  pathParams: List;
  url: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBody".
 */
export interface RequestBody {
  type: RequestBodyType;
  form?: RequestBodyForm;
  text?: RequestBodyText;
  graphql?: RequestBodyGraphQL;
  file?: RequestBodyFile;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyForm".
 */
export interface RequestBodyForm {
  fields: RequestBodyFormItem[];
  isMultipart: boolean;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyFormItem".
 */
export interface RequestBodyFormItem {
  enabled: boolean;
  file?: {
    name: string;
  };
  name: string;
  type: RequestBodyFormItemType;
  value?: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyText".
 */
export interface RequestBodyText {
  format: RequestMimeType;
  value: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyGraphQL".
 */
export interface RequestBodyGraphQL {
  query: string;
  variables: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyFile".
 */
export interface RequestBodyFile {
  name: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "ListItem".
 */
export interface ListItem {
  enabled: boolean;
  name: string;
  value: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Workspace".
 */
export interface Workspace {
  collections: Collection[];
  environments: Environment[];
  drafts: Request[];
  icon?: IconConfig;
  id?: string;
  name: string;
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Environment".
 */
export interface Environment {
  color?: Color;
  id?: string;
  isDefault: boolean;
  isLocalOnly: boolean;
  name?: string;
  variables: Variable[];
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "Variable".
 */
export interface Variable {
  id?: string;
  isSecret: boolean;
  name: string;
  value: string;
}

/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "AuthTarget".
 */
export enum AuthTarget {
  HEADERS = "headers",
  PARAMS = "params"
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyType".
 */
export enum RequestBodyType {
  None = "none",
  Text = "text",
  Form = "form",
  GraphQL = "graphql",
  File = "file"
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestBodyFormItemType".
 */
export enum RequestBodyFormItemType {
  Text = "text",
  File = "file",
  FileText = "filetext"
}
/**
 * This interface was referenced by `HTTPieExportFormat`'s JSON-Schema
 * via the `definition` "RequestMimeType".
 */
export enum RequestMimeType {
  Plain = "text/plain",
  Json = "application/json",
  Xml = "application/xml",
  Yaml = "text/yaml"
}
